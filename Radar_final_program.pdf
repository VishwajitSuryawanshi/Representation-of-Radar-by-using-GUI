/* Representation of RADAR by using GUI */

// HEADER FILES USED

#include<stdio.h>
#include<conio.h>
#include<graphics.h>
#include<dos.h>

// FUNCTIONS USED

void principle();
void distance();
void direction();
void close();

void main()
{
int gd=DETECT,gm,x,y;
initgraph(&gd,&gm,"c:\\turboc3\\bgi"); //Initializing Graphics Mode

principle();
distance();
direction();
close();

getch();
closegraph();
restorecrtmode();
}

void principle()
{
setbkcolor(BLUE);
setcolor(WHITE);

delay(2000);
rectangle(80,300,180,360);
setfillstyle(1,YELLOW); // TRANSMITTER
floodfill(85,305,WHITE);
setcolor(RED); // ARROW TO DUPLEXER
settextstyle(11,0,2);
outtextxy(87,325,"TRANSMITTER");
delay(1000);

setcolor(WHITE);
moveto(180,330);
lineto(230,330);
lineto(225,335);
moveto(230,330);
lineto(225,325);

setfillstyle(1,CYAN);
rectangle(230,300,310,360); // DUPLEXER
moveto(270,300);
lineto(270,360);
floodfill(235,305,WHITE); // PART 1

setcolor(RED);
outtextxy(238,325,"DUPLEXER");

delay(1000);

setcolor(WHITE);
moveto(250,300); // ARROW FROM DUPLEXER
lineto(250,250);
lineto(255,255);
moveto(250,250);
lineto(245,255);
delay(1000);
setcolor(RED);
settextstyle(11,0,2);

outtextxy(246,85,"ANTENNA");

setcolor(WHITE);
rectangle(250,230,290,240); // ANTENNA
rectangle(245,240,295,250);

setfillstyle(9,BROWN);
floodfill(257,232,WHITE);
floodfill(247,243,WHITE);
setfillstyle(1,LIGHTGRAY);
ellipse(290,130,90,89,5,30);
floodfill(290,130,WHITE);

setfillstyle(9,BROWN);
arc(300,130,105,255,31);
floodfill(275,130,WHITE);

setfillstyle(7,BROWN);
moveto(260,230);
lineto(270,140);
moveto(280,230);
lineto(270,140);
floodfill(275,225,WHITE);

rectangle(255,115,268,145);
rectangle(250,120,255,140);
setfillstyle(1,DARKGRAY);
floodfill(258,117,WHITE);
floodfill(253,123,WHITE);
delay(1000);

setcolor(WHITE);

moveto(290,125);
lineto(530,47);

moveto(530,47); // ARROW TO TARGET
lineto(525,52);
moveto(530,47);
lineto(524,44);

setcolor(RED);
settextstyle(11,0,2);
outtextxy(515,25,"TARGET");
setcolor(WHITE);
setfillstyle(1,LIGHTGREEN); // TARGET
circle(540,50,10);
floodfill(540,50,WHITE);
delay(500);
setfillstyle(1,RED);
floodfill(540,50,WHITE);
delay(500);
setfillstyle(1,LIGHTGREEN);
floodfill(540,50,WHITE);
delay(500);
delay(1000);
moveto(534,57); // ARROW TO ANTENNA
lineto(296,137);

moveto(296,137);
lineto(300,141);
moveto(296,137);
lineto(299,131);

delay(1000);
moveto(290,250); // ARROW TO DUPLEXER
lineto(290,300);
lineto(285,295);
moveto(290,300);
lineto(295,295);

setfillstyle(1,CYAN);
floodfill(275,305,WHITE); // PART 2

setcolor(RED);
settextstyle(11,0,2);
outtextxy(238,325,"DUPLEXER");
delay(1000);

setcolor(WHITE);
moveto(310,330); // ARROW TO RECEIVER
lineto(360,330);
lineto(355,325);
moveto(360,330);
lineto(355,335);
setfillstyle(1,YELLOW);
rectangle(360,300,440,360); // RECEIVER
floodfill(365,305,WHITE);

setcolor(RED);
settextstyle(11,0,2);
outtextxy(368,325,"RECEIVER");

delay(1000);
setcolor(WHITE);
moveto(440,330); // ARROW TO DISPLAY
lineto(490,330);
lineto(485,325);
moveto(490,330);
lineto(485,335);

setfillstyle(1,CYAN);
circle(540,330,50); // DISPLAY
floodfill(540,330,WHITE);

setcolor(RED);
settextstyle(11,0,2);
outtextxy(515,327,"DISPLAY");
delay(3000);
cleardevice();

}

void distance()
{

setbkcolor(RED);
setcolor(BLUE);

ellipse(200,200,90,89,10,40); // ANTENNA
arc(210,200,105,255,42);
rectangle(130,360,180,385);
moveto(140,360);
lineto(155,220);
moveto(170,360);
lineto(155,220);
rectangle(145,180,167,220);
rectangle(135,190,145,210);
setcolor(WHITE);
settextstyle(11,0,2);
outtextxy(127,400,"ANTENNA");

setcolor(BLUE);
setfillstyle(1,YELLOW);
floodfill(200,200,BLUE);
setfillstyle(9,BROWN);
floodfill(135,365,BLUE);
setfillstyle(7,BROWN);
floodfill(155,340,BLUE);
setfillstyle(9,LIGHTGREEN);
floodfill(147,182,BLUE);
floodfill(140,195,BLUE);
setfillstyle(9,LIGHTGREEN);
floodfill(180,200,BLUE);

setcolor(WHITE); // TIMER
circle(110,80,15);
circle(160,80,15);
rectangle(80,50,190,110);
settextstyle(11,0,2);
outtextxy(115,35,"TIMER");
setfillstyle(1,BLUE);
floodfill(110,80,WHITE);
floodfill(160,80,WHITE);
floodfill(90,60,WHITE);
outtextxy(102,100,"ON");
outtextxy(149,100,"OFF");

setcolor(BLUE);
circle(570,200,7); // TARGET
setfillstyle(1,YELLOW);
floodfill(570,200,BLUE);
setcolor(WHITE);
outtextxy(550,215,"TARGET");

setfillstyle(1,YELLOW);
floodfill(110,80,WHITE);

setlinestyle(3,0,3); // RAY FROM ANTENNA TO TARGET
setcolor(WHITE);
circle(220,200,2);
delay(250);
setcolor(RED);
circle(220,200,2);
setcolor(WHITE);
circle(240,200,2);
delay(250);
setcolor(RED);
circle(240,200,2);
setcolor(WHITE);
circle(260,200,2);
delay(250);
setcolor(RED);
circle(260,200,2);
setcolor(WHITE);
circle(280,200,2);
delay(250);
setcolor(RED);
circle(280,200,2);
setcolor(WHITE);
circle(300,200,2);
delay(250);
setcolor(RED);
circle(300,200,2);
setcolor(WHITE);
circle(320,200,2);
delay(250);
setcolor(RED);
circle(320,200,2);
setcolor(WHITE);
circle(340,200,2);
delay(250);
setcolor(RED);
circle(340,200,2);
setcolor(WHITE);
circle(360,200,2);
delay(250);
setcolor(RED);
circle(360,200,2);
setcolor(WHITE);
circle(380,200,2);
delay(250);
setcolor(RED);
circle(380,200,2);
setcolor(WHITE);
circle(400,200,2);
delay(250);
setcolor(RED);
circle(400,200,2);
setcolor(WHITE);
circle(420,200,2);
delay(250);
setcolor(RED);
circle(420,200,2);
setcolor(WHITE);
circle(440,200,2);
delay(250);
setcolor(RED);
circle(440,200,2);
setcolor(WHITE);
circle(460,200,2);
delay(250);
setcolor(RED);
circle(460,200,2);
setcolor(WHITE);
circle(480,200,2);
delay(250);
setcolor(RED);
circle(480,200,2);
setcolor(WHITE);
circle(500,200,2);
delay(250);
setcolor(RED);
circle(500,200,2);
setcolor(WHITE);
circle(520,200,2);
delay(250);
setcolor(RED);
circle(520,200,2);
setcolor(WHITE);
circle(540,200,2);
delay(250);
setcolor(RED);
circle(540,200,2);
setcolor(WHITE);
circle(558,200,2);
delay(250);
setcolor(RED);
circle(558,200,2);

setcolor(WHITE);
setlinestyle(3,0,3);
circle(570,200,50);
delay(500);
setcolor(RED);
circle(570,200,50);
setcolor(WHITE);
circle(570,200,100);
delay(500);
setcolor(RED);
circle(570,200,100);
setcolor(WHITE);
circle(570,200,150);
delay(500);
setcolor(RED);
circle(570,200,150);
setcolor(WHITE);
arc(570,200,110,250,200);
delay(500);
setcolor(RED);
arc(570,200,110,250,200);
setcolor(WHITE);
arc(570,200,120,240,250);
delay(500);
setcolor(RED);
arc(570,200,120,240,250);
setcolor(WHITE);
arc(570,200,135,230,300);
delay(500);
setcolor(RED);
arc(570,200,135,230,300);
setcolor(WHITE);
arc(573,200,145,220,360);
delay(250);
setcolor(RED);
arc(573,200,145,220,360);

setfillstyle(1,BLUE);
floodfill(110,80,WHITE);
setfillstyle(1,YELLOW);
floodfill(160,80,WHITE);
delay(3000);
cleardevice();
}

void direction()
{
setbkcolor(BLACK);
setlinestyle(0,1,2);
setcolor(WHITE);

rectangle(95,400,165,415); // ANTENNA
moveto(110,400);
lineto(130,198);
moveto(150,400);
lineto(130,198);
rectangle(80,415,180,430);
setfillstyle(7,BROWN);
floodfill(130,390,WHITE);
setfillstyle(9,BROWN);
floodfill(96,401,WHITE);
floodfill(81,416,WHITE);
rectangle(98,158,128,208);
rectangle(88,168,98,198);
ellipse(173,180,90,89,10,60);
arc(193,180,107,253,64);
setfillstyle(9,BROWN);
floodfill(100,160,WHITE);
floodfill(90,170,WHITE);
setfillstyle(1,YELLOW);
floodfill(173,180,WHITE);
setfillstyle(9,LIGHTGREEN);
floodfill(150,180,WHITE);

settextstyle(7,0,4);
setcolor(YELLOW);
outtextxy(70,70,"Antenna");

delay(2000);

setcolor(WHITE);
ellipse(363,180,270,90,50,30); // RADIATION PATTERN
moveto(183,180);
lineto(363,150);
moveto(183,180);
lineto(363,210);
setfillstyle(1,BLUE);
floodfill(363,180,WHITE);
delay(1000);
setcolor(YELLOW);
settextstyle(11,0,2);
outtextxy(225,177,"Radiation Pattern");
delay(2000);

setcolor(WHITE);
setfillstyle(1,RED);
circle(395,199,3);
floodfill(395,199,WHITE);
circle(340,156,3);
floodfill(340,156,WHITE);
setcolor(YELLOW);
moveto(345,164);
lineto(352,164);
lineto(352,158);
lineto(359,158);
lineto(359,164);
lineto(366,164);

moveto(397,211);
lineto(404,211);
lineto(404,205);
lineto(411,205);
lineto(411,211);
lineto(418,211);

setcolor(YELLOW);
settextstyle(11,0,2);
outtextxy(340,230,"LOW STRENGTH ECHO");
outtextxy(270,135,"LOW STRENGTH ECHO");
delay(2000);
setcolor(WHITE);
setfillstyle(1,RED);
circle(368,178,3);
floodfill(368,178,WHITE);

setcolor(YELLOW);
moveto(375,185);
lineto(382,185);
lineto(382,169);
lineto(389,169);
lineto(389,185);
lineto(396,185);
outtextxy(425,175,"HIGH STRENGTH ECHO");
delay(3000);
cleardevice();
}

void close()
{
setbkcolor(YELLOW);
setcolor(BLUE);
settextstyle(7,HORIZ_DIR,4);
outtextxy(160,180,"***** THANK YOU *****");
outtextxy(120,280," Press any key to EXIT");

}